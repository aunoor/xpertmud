#!/usr/bin/python
import sys
import re

sn = sys.argv[1].upper()
SRCDIR = "."
if len(sys.argv) > 2:
  SRCDIR = sys.argv[2]

def parseLine(line):
  m = re.match(r'^\s*from\s+([^\s]+)\s+import\s+\*\s+#\s*FIXED$', line)
  pam = re.match(r'^\s*parseHelp\(\"([^\"]+)\"\)', line)
  if(m != None):
    f = open(SRCDIR + "/" + m.group(1) + ".py", "r")
    line = f.readline()
    while(line != ""):
      parseLine(line)
      line = f.readline()
  elif(pam != None):
    f = open(SRCDIR + "/../help/" + pam.group(1), "r")
    parseLine("inlineHelpParserDTD = helpdtd()\n")
    parseLine("inlineHelpParser = XMXmlParser(inlineHelpParserDTD)\n")
    line = f.readline()
    while(line != ""):
      line = re.subn(r"'", "' + \"'\" + r'", line)[0]
      line = re.subn(r"\n", "' + \"\\\\n\"", line)[0]
#      sys.stderr.write("inlineHelpParser.parse(r'" + line + "')\n")
      parseLine("inlineHelpParser.parse(r'" + line + ")\n")
      line = f.readline()
    parseLine("inlineHelpParser.finish()\n")
    parseLine("addHelp(inlineHelpParser.getNodes())\n")
  else:
    line = re.sub(r"\\", r"\\\\", line)
    line = re.sub(r"\n", r"\\n", line)
    line = re.sub(r"\"", r"\"", line)
    print '"' + line + '",'
  

print "#ifndef " + sn + "_H";
print "#define " + sn + "_H\n";
print "/* File automagically generated by py2h.py. Do not edit! */\n";
print "static const char *script[] = {"

line = sys.stdin.readline()
while (line != ""):
  parseLine(line)
  line = sys.stdin.readline()

print "0 };"
print "#endif\n";
