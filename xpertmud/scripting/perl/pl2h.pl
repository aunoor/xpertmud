#!perl -w

my $sn=uc(shift);
my $SRCDIR = shift || ".";

my @fixed;
sub parseLine {
  my ($line) = @_;
  if($line =~ /^\s*use\s+([^;]+)\s*;\s+#\s*FIXED$/) {
    my $filename = $1;
    if(not grep(/^$filename$/, @fixed)) {
      push(@fixed, $filename);
      my $incfile = undef;
      open($incfile, "<$SRCDIR/$filename.pm") || die "Couldn't open $SRCDIR/$filename.pm";
      while(my $incline = <$incfile>) {
	parseLine($incline);
      }
      close $incfile;
    }
  } elsif($line =~ /^\s*parseHelp\(\"([^\"]+)\"\)/) {
    my $helpfile = undef;
    open($helpfile, "<$SRCDIR/../help/$1") || die "Couldn't open $SRCDIR/../help/$1";
    parseLine("{\n");
    parseLine("  my \$inlineHelpParserDTD = new helpdtd();\n");

    parseLine("  my \$inlineHelpParser = new XMXmlParser(\$inlineHelpParserDTD);\n");
    while(my $helpline = <$helpfile>) {
# why don't I need 'em ??
#      $helpline =~ s/\$/\$/g;
#      $helpline =~ s/\@/\@/g;
#      $helpline =~ s/\%/\%/g;
      $helpline =~ s/'/' . "'" . q'/g;
      $helpline =~ s/\n/' . "\\n"/g;
      parseLine("  \$inlineHelpParser->parse(q'" . $helpline . ");\n");
    }
    parseLine("  \$inlineHelpParser->finish();\n");
    parseLine("  addHelp(\$inlineHelpParser->getNodes());\n");
    parseLine("}\n");
    close $helpfile;
  } else {
    $line =~ s/\\/\\\\/g;
    $line =~ s/\n/\\n/g;
    $line =~ s/\"/\\\"/g;
    print '"',$line,"\",\n";
  }
}

print "#ifndef ${sn}_H\n";
print "#define ${sn}_H\n\n";
print "/* File automagically generated by pl2h.pl. Do not edit! */\n\n";
print "static const char *script[] = {\n";

while(my $line = <STDIN>) {
  parseLine($line);
}


print "0 };\n";
print "#endif\n";
